nohup: ignoring input
STEP 1: FROM registry.access.redhat.com/rhel7.6
STEP 2: RUN set -vx && echo "7.6" > /etc/yum/vars/releasever && yum-config-manager --enable rhel-7-server-optional-rpms && yum -y -v -t install "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm" && yum clean all && yum -y update && cd /var/cache && /bin/rm -rf dnf yum
--> Using cache 05c02875a9466b22d4cd95c5846b09ec60106b074dcca19e88b72daae22ae61a
STEP 3: RUN set -vx && echo -e 'set -vx \nfor (( TRY=1; TRY<=11; TRY++ )); do \n    yum -y -v install $@ \n    result=$? \n    for PKG in $@ ; do \n        yum list installed | grep "^$PKG" \n        (( result += $? )) \n    done \n    if (( $result == 0 )); then \n        /bin/rm -rf /var/cache/yum \n        /bin/rm -rf /var/cache/dnf \n        exit 0 \n    fi \n    sleep 10 \ndone \nexit 1 \n' > /tmp/yum_install.sh && chmod +x /tmp/yum_install.sh && cd /usr/local && /bin/rm -rf lib64 && ln -s lib lib64 && /tmp/yum_install.sh     binutils     bzip2     findutils     gcc     gcc-c++     gcc-gfortran     git     gzip     make     patch     pciutils     unzip     vim-enhanced     wget     xz     zip
--> Using cache 095fde3083999c853da65391c302b9206485bdcc6f96207118bdf98b7281b8c1
STEP 4: RUN set -vx && mkdir -p /tmp/gcc_tmp_build_dir; cd /tmp/gcc_tmp_build_dir; wget -q "https://ftp.gnu.org/gnu/gcc/gcc-5.5.0/gcc-5.5.0.tar.xz"; wget -q "https://gcc.gnu.org/pub/gcc/infrastructure/gmp-6.1.0.tar.bz2"; wget -q "https://gcc.gnu.org/pub/gcc/infrastructure/mpfr-3.1.4.tar.bz2"; wget -q "https://gcc.gnu.org/pub/gcc/infrastructure/mpc-1.0.3.tar.gz"; wget -q "https://gcc.gnu.org/pub/gcc/infrastructure/isl-0.18.tar.bz2"; tar -xf gcc-5.5.0.tar.xz; tar -xf gmp-6.1.0.tar.bz2; tar -xf mpfr-3.1.4.tar.bz2; tar -xf mpc-1.0.3.tar.gz; tar -xf isl-0.18.tar.bz2; ln -s /tmp/gcc_tmp_build_dir/gmp-6.1.0 gcc-5.5.0/gmp; ln -s /tmp/gcc_tmp_build_dir/mpfr-3.1.4 gcc-5.5.0/mpfr; ln -s /tmp/gcc_tmp_build_dir/mpc-1.0.3 gcc-5.5.0/mpc; ln -s /tmp/gcc_tmp_build_dir/isl-0.18 gcc-5.5.0/isl; gcc-5.5.0/configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/usr/local; make -j`getconf _NPROCESSORS_ONLN`; make install-strip; cd /tmp; /bin/rm -rf /tmp/gcc_tmp_build_dir
--> Using cache 167eacece4f509bb307da970f1407e64c6c710adf0f698ca84ffe3f728030676
STEP 5: ENV CC="/usr/local/bin/gcc" CXX="/usr/local/bin/g++" LD_LIBRARY_PATH="/usr/local/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
--> Using cache 67cda15234e0232a4360a081750128d75d377130d18889625ddfffee35e7aaba
STEP 6: RUN set -vx && /tmp/yum_install.sh     bzip2-devel     expat-devel     gdbm-devel     libdb4-devel     libffi-devel     ncurses-devel     openssl-devel     readline-devel     sqlite-devel     tk-devel     xz-devel     zlib-devel && cd /var/cache && /bin/rm -rf dnf yum && cd /tmp && wget "https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tar.xz" && tar -xf Python*.xz && /bin/rm Python*.xz && cd /tmp/Python* && ./configure     --enable-optimizations     --enable-shared     --prefix=/usr/local     --with-ensurepip=install     LDFLAGS="-Wl,-rpath /usr/local/lib" && make -j`getconf _NPROCESSORS_ONLN` install && cd /usr/local/include && PYTHON_INC_DIR_NAME=`ls -d python*` && ALT_PYTHON_INC_DIR_NAME=${PYTHON_INC_DIR_NAME%m} && if [ "$ALT_PYTHON_INC_DIR_NAME" != "$PYTHON_INC_DIR_NAME" ]; then     ln -s "$PYTHON_INC_DIR_NAME" "$ALT_PYTHON_INC_DIR_NAME"; fi && cd /tmp && /bin/rm -r /tmp/Python* && /usr/local/bin/pip3 -v install --upgrade     pip     setuptools && if python --version > /dev/null 2>&1; then     whereis python; else     cd /usr/local/bin;     ln -s python3 python; fi
--> Using cache e878893e0a5dbc924005875a039fc13654934b969e61e3374cce4bb672626848
STEP 7: RUN set -vx && cd /tmp && wget "https://cmake.org/files/v3.13/cmake-3.13.3.tar.gz" && tar -xf cmake*.gz && /bin/rm cmake*.gz && cd /tmp/cmake* && ./bootstrap && make -j`getconf _NPROCESSORS_ONLN` install && cd /tmp && /bin/rm -rf /tmp/cmake* && cmake --version
--> Using cache 7e663b563e6273574d090230f7f7b2c600e2fca9d75d86ba676fa730f911fc8a
STEP 8: RUN date; df -h
--> Using cache 4f47258d2d27bd918970d33da68d253529ecc3c43c0e41c5e3810d08de03be7d
STEP 9: RUN set -vx && echo -e 'exec > /etc/yum.repos.d/cuda.repo \necho [cuda] \necho name=cuda \nif [ -f /etc/fedora-release ]; then \necho baseurl="http://developer.download.nvidia.com/compute/cuda/repos/fedora27/x86_64" \nelse \necho baseurl="http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64" \nfi \necho enabled=1 \necho gpgcheck=0 \n' >> /tmp/Make_CUDA_Repo.sh && sh /tmp/Make_CUDA_Repo.sh && /tmp/yum_install.sh cuda-10-1 && echo -e '\nexport CUDA_HOME=/usr/local/cuda \nexport CUDA_PATH=/usr/local/cuda \nexport PATH=/usr/local/cuda/bin:/usr/local/bin:/usr/bin:${PATH} \nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH \n\n' >> ~/.bashrc
--> Using cache a4f048c55eda2ba3fad07fed075de3da72e43ab39d70a5e1da12da1dc64d2db3
STEP 10: ENV CUDA_VERSION="10.1" CUDA_HOME="/usr/local/cuda" CUDA_PATH="/usr/local/cuda" PATH="/usr/local/cuda/bin:/usr/local/bin:/usr/bin:${PATH:+:${PATH}}" LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
--> Using cache db500c4aee90742d319d5c937ea0c0d5c89ab13075c8c32d050e1f79d0ff0017
STEP 11: RUN set -vx && cd /tmp && git clone --depth 1 "https://github.com/NVIDIA/nccl.git" --branch=v2.4.6-1 && cd /tmp/nccl && if grep install Makefile ; then     echo "Makefile already has install target"; else     echo "install: src.install" >> Makefile; fi && make -j`getconf _NPROCESSORS_ONLN` src.build && make -j`getconf _NPROCESSORS_ONLN` install && cd /tmp && /bin/rm -rf /tmp/nccl* && ldconfig 
--> Using cache b2a56a303a1a989e516cb44d0b52630c1e7be12182d02e30931fbf7609659e37
STEP 12: RUN set -vx && cd /tmp && echo -e 'set -vx \nif [ -d "/usr/local/cuda-10.1" ]; then \n    CUDNN_VER="v7.5.0/cudnn-10.1-linux-x64-v7.5.0.56.tgz" \nelif [ -d "/usr/local/cuda-9.2" ]; then \n    CUDNN_VER="v7.4.2/cudnn-9.2-linux-x64-v7.4.2.24.tgz" \nelif [ -d "/usr/local/cuda-9.1" ]; then \n    CUDNN_VER="v7.1.3/cudnn-9.1-linux-x64-v7.1.tgz" \nelif [ -d "/usr/local/cuda-9.0" ]; then \n    CUDNN_VER="v7.4.2/cudnn-9.0-linux-x64-v7.4.2.24.tgz" \nelif [ -d "/usr/local/cuda-8.0" ]; then \n    CUDNN_VER="v7.1.3/cudnn-8.0-linux-x64-v7.1.tgz" \nelse \n    CUDNN_VER="idk_cudnn_version" \nfi \necho "http://developer.download.nvidia.com/compute/redist/cudnn/$CUDNN_VER" \n' > /tmp/select_cudnn.sh && wget `sh /tmp/select_cudnn.sh` && tar -xvf cudnn*.tgz && cd /tmp/cuda && mv include/cudnn.h /usr/local/cuda/include && mv lib64/lib* /usr/local/cuda/lib64 && cd /tmp && /bin/rm -rf /tmp/cud* && ldconfig
--> Using cache b5f417d08ee124b4b00c183155ee0a235f2be29e44eb63a6811efa07c6a2bfde
STEP 13: RUN date; df -h
--> Using cache 0f94fe1b2e750821a9b45d3f9eabf6862328421f189c1f59c700dd32b788365a
STEP 14: RUN set -vx && /usr/local/bin/pip3 -v install     numpy && /usr/local/bin/python3 -c 'import numpy'
--> Using cache 19491039f16fa0411fcac366b4cc3b9828a87887b21e44d28de965bd6d8dbb3b
STEP 15: RUN date; df -h
--> Using cache 5464d5d94555c4d766f001f9be7896f2d0f4c31a240ef0c5aac1c7d74031d741
STEP 16: RUN pip install tqdm pyyaml
--> Using cache 1c267f853cc78985b852850e4c5135a3d7710ad428c09b9686531f3b55866a24
STEP 17: WORKDIR /opt/pytorch
--> Using cache 3fa2f2abc1b5df1d431d3ed768509085eb41179362adbe9e8a4d21e45530bff0
STEP 18: COPY pytorch .
--> Using cache 870f7dfa8bbdb2a2690dcc6a6685a8b9d0610cae419de0d38ea43982d221640d
STEP 19: WORKDIR /opt/pytorch/pytorch
--> Using cache 05ed17003c40ec78625217b124b1e55c14b8d2dc8ca97c19f034b61a7ee1d831
STEP 20: ENV PYTORCH_BUILD_VERSION=1.1.0a0+828a6a3 PYTORCH_VERSION=1.1.0a0+828a6a3 PYTORCH_BUILD_NUMBER=0
--> Using cache f924411dfeea185394d472d24a55e8131a87b35de6cdb984c691b04db30295c9
STEP 21: RUN python3 setup.py install && cp -a /opt/pytorch/pytorch/third_party/ideep/mkl-dnn/external/mklml_lnx*/lib/* /usr/local/lib64 && python3 setup.py clean && rm -rf /opt/pytorch/pytorch/build
--> Using cache 7a5e49acac54b603eaa4f03e32cabc8a4c232b86aad1cfd5b945a2507691b663
STEP 22: WORKDIR /opt/pytorch/vision
--> Using cache 31b47d064e51da32b665237c4e8ad6026a3d45ed9978fd12293b998cc2958567
STEP 23: RUN python3 setup.py install && python3 setup.py clean
--> Using cache 3345858f2153f8170ebbc9d73abd0c499a4a921ea5d9001f651a1abc72317265
STEP 24: WORKDIR /opt/pytorch/apex 
--> Using cache 71f08d74359483f9dcf2fb49c27d0ecd8d8deadbd30333bdd55989b59e4b772f
STEP 25: RUN rm -rf build && python3 setup.py install --cuda_ext --cpp_ext && rm -rf build
--> Using cache 38a158fee75c82e55d000c1d99436d1330b739f54072a7a51d7b1b84bc4a5246
STEP 26: RUN yum -y install openmpi3
--> Using cache 0e7bc1bc7ac8f917b0ed52a2b49498e4cd820da9103bad5d46d3b91a586299fe
STEP 27: WORKDIR /opt
--> Using cache b8ab0f683450593f7f881eab2c0a60401df6d465a387e050d059d04ce0008adb
STEP 28: ENV COCOAPI_VERSION=2.0+nv0.3.1
--> Using cache 463cc00452a1a88911193ef16bf73772cfc9ffe607d1dd31fb511dd7c85d16de
STEP 29: RUN export COCOAPI_TAG=$(echo ${COCOAPI_VERSION} | sed 's/^.*+n//') && pip install --no-cache-dir git+https://github.com/nvidia/cocoapi.git@${COCOAPI_TAG}#subdirectory=PythonAPI
--> Using cache 64ce8f14e511a756cba2abc6d0c7d6d5c654f9aca82b53a4403946d89c81c8fc
STEP 30: RUN yum -y install numactl         infiniband-diags         pciutils
--> Using cache 5aa9fb7480387ddf5e7cd6af4d943dc3e1018f5418fc2f629e35940c7a9368a1
STEP 31: WORKDIR /workspace/translation
--> Using cache e463f7d6d516b71d78809a295f86975b73ed319aced975bd6c35659bd11035d4
STEP 32: COPY requirements.txt .
--> Using cache 68578d511224dfe3cc08f972ca7942633ca14f520315efb004440dff44e32260
STEP 33: RUN pip install --no-cache-dir https://github.com/mlperf/training/archive/6289993e1e9f0f5c4534336df83ff199bd0cdb75.zip#subdirectory=compliance  && pip install --no-cache-dir -r requirements.txt
--> Using cache 1753ffcf1e5efc465f1f08ed34e107b0ac5ee7525aa1c79f42c5692d85e00cab
STEP 34: RUN echo "cache from here"
cache from here
1682e60916c580f2c50e07fa85bb2da40c77090a4dfb51baf6dc23c3cb1a5f7e
STEP 35: COPY . .
1375e49a7a7461cd8a822022a3ff9ef8504579bb3591a5016abdfa608d99634a
STEP 36: RUN rm -rf pytorch && pip install -e .
Obtaining file:///workspace/translation
Requirement already satisfied: cffi in /usr/local/lib/python3.6/site-packages (from fairseq==0.5.0) (1.12.3)
Requirement already satisfied: mlperf-compliance==0.6.0 in /usr/local/lib/python3.6/site-packages (from fairseq==0.5.0) (0.6.0)
Requirement already satisfied: numpy in /usr/local/lib/python3.6/site-packages (from fairseq==0.5.0) (1.16.4)
Requirement already satisfied: sacrebleu in /usr/local/lib/python3.6/site-packages (from fairseq==0.5.0) (1.3.7)
Requirement already satisfied: torch in /usr/local/lib/python3.6/site-packages (from fairseq==0.5.0) (1.1.0a0+828a6a3)
Requirement already satisfied: tqdm in /usr/local/lib/python3.6/site-packages (from fairseq==0.5.0) (4.32.2)
Requirement already satisfied: pycparser in /usr/local/lib/python3.6/site-packages (from cffi->fairseq==0.5.0) (2.19)
Requirement already satisfied: typing in /usr/local/lib/python3.6/site-packages (from sacrebleu->fairseq==0.5.0) (3.7.4)
Requirement already satisfied: portalocker in /usr/local/lib/python3.6/site-packages (from sacrebleu->fairseq==0.5.0) (1.5.1)
Installing collected packages: fairseq
  Running setup.py develop for fairseq
Successfully installed fairseq
WARNING: You are using pip version 19.1.1, however version 19.2.2 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
5f3e9912bd36034751945e936f6a827c208cc87da91757685266232a65ca97d4
STEP 37: ENV OMP_NUM_THREADS=1
4e7aae5606fb58325aab2f68f65a14da54b04b2b4ce7b533222cfae5b12d8686
STEP 38: ENV OPENCV_FOR_THREADS_NUM=1
fe3a309935fe545867460d91e2bb94f43de76bea66586c98e2e7dd304609dd77
STEP 39: ENV NVIDIA_PYTORCH_VERSION="RHEL"
274f34ddb5e23ad063f0f6447f9d1c6778b1cb0a2af40f1b22f25a3ce0212f46
STEP 40: ENV OPENMPI_VERSION=3.0.2
2bd2dc7cbc7c4eb43e19f1f0e09ef516fa4056ae37719c490f64a7222418f9ac
STEP 41: ENV CUDA_DRIVER_VERSION=418.67
f0ff737515a76e54379fcf17743bc3f51f21dfcb908a262a4c8633dc94a6ce03
STEP 42: ENV NCCL_VERSION=2.3.7
ddf46e1f851f836d8a3c93a22ed266ad064441347458d329da40aeffa6178a0a
STEP 43: ENV CUDNN_VERSION=7.4
6da57ac1ccdfb0b1b0cb89042001ae71f5faf02eb6c73a231bf0e9ba3a9080de
STEP 44: ENV CUBLAS_VERSION=10.0.130
ffa9ab1c587243cc7c14723afaa4942bb76a9d2d619b9859def3542d5b193c52
STEP 45: ENV TRT_VERSION=none
60764ad3087348b9a99ade5a556b1d455709a03c1542b8182236998c51dfccd8
STEP 46: ENV DALI_VERSION=none
STEP 47: COMMIT rhel_transformer
01358fb948ef4c0dc47d82ef21659c1de6ddf931925ebb956a7e58e108be384e
